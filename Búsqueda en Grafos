class Grafo:
    def __init__(self):
        self.grafo = {}

    def agregar_vertice(self, vertice):
        if vertice not in self.grafo:
            self.grafo[vertice] = []

    def agregar_arista(self, vertice_origen, vertice_destino):
        self.grafo[vertice_origen].append(vertice_destino)
        # Si el grafo es no dirigido, descomenta la siguiente l√≠nea
        # self.grafo[vertice_destino].append(vertice_origen)

    def dfs(self, inicio, visitados=None):
        if visitados is None:
            visitados = set()
        print(inicio)
        visitados.add(inicio)
        for vecino in self.grafo[inicio]:
            if vecino not in visitados:
                self.dfs(vecino, visitados)

# Ejemplo de uso
grafo_ejemplo = Grafo()
grafo_ejemplo.agregar_vertice(1)
grafo_ejemplo.agregar_vertice(2)
grafo_ejemplo.agregar_vertice(3)
grafo_ejemplo.agregar_vertice(4)

grafo_ejemplo.agregar_arista(1, 2)
grafo_ejemplo.agregar_arista(1, 3)
grafo_ejemplo.agregar_arista(2, 4)
grafo_ejemplo.agregar_arista(3, 4)

print("Recorrido DFS:")
grafo_ejemplo.dfs(1)
